# KP Cricket Predictor - Project Structure

## 📁 **Current Project Structure**

```
KP_Cricket_Predictor/
├── 📁 scripts/                          # Core prediction engines
│   ├── 🔮 live_predictor.py            # Main prediction interface
│   ├── 🤖 predictive_ml_training.py    # Multi-target ML training
│   ├── 📊 ml_data_preparation.py       # ML data preparation
│   ├── ⚡ chart_generator.py           # Swiss Ephemeris chart generation
│   ├── 🔍 kp_favorability_rules.py     # KP astrological rules
│   ├── 🌟 astro_processor.py           # Astrological data processing
│   ├── 📈 training_supervisor.py       # Training supervision
│   ├── 🗄️ db_manager.py               # Database operations
│   ├── 🔄 update_final_scores.py       # Score updates with KP
│   └── ✅ verify_score_update.py       # Score verification
├── 📁 app/                             # Web interfaces
│   ├── 🌐 app.py                       # Main Streamlit app
│   └── 🔮 live_predictor_app.py        # Live prediction interface
├── 📁 config/                          # Configuration files
│   ├── 📋 nakshatra_sub_lords.csv      # Basic nakshatra mapping
│   └── 📋 nakshatra_sub_lords_longitudes.csv # 249-point KP mapping
├── 📁 models/                          # Trained ML models
│   └── 🤖 multi_target_predictive_results_*.pkl # Multi-target models
├── 📁 ml_data/                         # Training datasets
│   └── 📊 kp_complete_training_data_*.csv # Complete training data
├── 📁 training_analysis/               # Database and analysis
│   └── 🗄️ cricket_predictions.db      # SQLite database
├── 📁 match_data/                      # Match data files
├── 📁 results/                         # Analysis results
├── 📁 docs/                           # Additional documentation
├── 📚 DATABASE_SCHEMA_DICTIONARY.md   # Complete database reference
├── 📊 CODEBASE_ANALYSIS_AND_DATA_DICTIONARY.md # Variable naming guide
├── 📋 ENHANCED_KP_SYSTEM_SUMMARY.md   # Technical implementation
├── 📖 PROJECT_DOCUMENTATION.md        # Complete project documentation
├── 📖 README.md                       # User guide and quick start
├── 📄 requirements.txt                # Python dependencies
├── 🔧 run_dashboard.bat              # Windows batch file
└── 📄 project_structure.txt          # This file
```

## 🔧 **Key Files by Category**

### **Core Prediction System**
- `scripts/live_predictor.py` - Main prediction interface with multi-target ML
- `scripts/chart_generator.py` - Astrological chart generation using Swiss Ephemeris
- `scripts/kp_favorability_rules.py` - Traditional KP astrological rules engine

### **Machine Learning Pipeline**
- `scripts/predictive_ml_training.py` - Multi-target ML training (79.3% accuracy)
- `scripts/ml_data_preparation.py` - Training data preparation and feature engineering
- `models/multi_target_predictive_results_*.pkl` - Trained models (4 targets)

### **Data Processing**
- `scripts/astro_processor.py` - Ball-by-ball astrological data processing
- `scripts/training_supervisor.py` - Bulk historical data processing
- `scripts/db_manager.py` - Database operations and management

### **Score Management**
- `scripts/update_final_scores.py` - Updates scores with authentic KP methodology
- `scripts/verify_score_update.py` - Verifies and validates score updates

### **Web Applications**
- `app/app.py` - Main Streamlit application
- `app/live_predictor_app.py` - Live prediction interface with timeline visualization

### **Database & Configuration**
- `training_analysis/cricket_predictions.db` - Main SQLite database
- `config/nakshatra_sub_lords_longitudes.csv` - 249-point KP mapping
- `DATABASE_SCHEMA_DICTIONARY.md` - Complete schema reference

### **Documentation**
- `README.md` - User guide with quick start instructions
- `PROJECT_DOCUMENTATION.md` - Complete project documentation
- `ENHANCED_KP_SYSTEM_SUMMARY.md` - Technical implementation details
- `CODEBASE_ANALYSIS_AND_DATA_DICTIONARY.md` - Variable naming guide

### **Training Data & Models**
- `ml_data/kp_complete_training_data_*.csv` - 216,859 astrological periods
- `models/` - Trained ML models with multi-target capabilities

## 📊 **Current Dataset**
- **Total Periods**: 216,859 astrological periods
- **Matches**: 3,992 matches processed
- **Average**: 54.3 periods per match
- **Features**: 23 pre-match features (Time + Location + KP)

## 🎯 **Model Performance**
- **KP Prediction**: 79.3% accuracy (Gradient Boosting)
- **Wicket Pressure**: 77.8% accuracy
- **High Scoring**: 59.3% accuracy  
- **Momentum Shift**: 53.9% accuracy

## 📈 **Current System Status**
- ✅ **Active Scripts**: 10 core files (cleaned up from 23)
- ✅ **ML Pipeline**: Complete multi-target training pipeline
- ✅ **Web Interface**: 2 Streamlit applications
- ✅ **Database**: Complete with 3,992 matches processed
- ✅ **Documentation**: Updated and comprehensive

## 🎯 **Key Features Implemented**
- Multi-target ML predictions with 79.3% KP accuracy
- Dynamic astrological periods based on planetary movements
- Real-time timeline generation with match dynamics
- Interactive web interface with visualization
- Complete data pipeline from raw data to predictions
- Authentic KP methodology with modern ML enhancement

## 🧹 **Recent Cleanup**
**Removed 13 unused/superseded files:**
- Legacy ML training scripts (5 files)
- Superseded KP prediction files (4 files) 
- Unused utility scripts (3 files)
- Old data preprocessing script (1 file)

**Result**: Streamlined codebase with only active, production-ready files.

---

**Last Updated**: After comprehensive cleanup - Active production system with multi-target ML pipeline 